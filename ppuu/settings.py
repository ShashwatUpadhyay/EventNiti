"""
Django settings for ppuu project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
from .ckeditorconfig import *
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

DOMAIN_NAME = 'http://127.0.0.1:8000/'
# DOMAIN_NAME = 'https://9319j0b7-8000.inc1.devtunnels.ms/'
# DOMAIN_NAME = 'https://9319j0b7-8000.inc1.devtunnels.ms/'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-($h@jyg6f%k0e^akfcq+a4@%-*vs6-h@fokhw936@d=n6*6**t'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "debug_toolbar",
    'django_ckeditor_5',
    'base',
    'account',
    'certificate',
    'events',
    'memories',
    'blog',
    'question_papers',
    'badge',
    'review',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "debug_toolbar.middleware.DebugToolbarMiddleware",
]
INTERNAL_IPS = [
    "127.0.0.1",
]

ROOT_URLCONF = 'ppuu.urls'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [  os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'base.context_processors.global_settings',
            ],
        },
    },
]

# ASGI_APPLICATION = 'ppuu.asgi.application'
WSGI_APPLICATION = 'ppuu.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # },
    'default': {
          'ENGINE':'django.db.backends.mysql',
          'NAME':'ppuudb',
          'USER':'root',
          'PASSWORD':'',
          'HOST':'localhost',
          'PORT':'3306',
          'OPTIONS': {
            'charset': 'utf8mb4',  # This is the important part
        },
      },
    #  'default': {
    #       'ENGINE':'django.db.backends.mysql',
    #       'NAME':'shashwat$ppuudb',
    #       'USER':'shashwat',
    #       'PASSWORD':'@Iampekka1',
    #       'HOST':'shashwat.mysql.pythonanywhere-services.com',
    #       'PORT':'3306',
    #   }     
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/' #url
STATIC_ROOT = BASE_DIR / 'staticfiles' # for production
STATICFILES_DIRS = [
    BASE_DIR / 'static'  #folder location
] 

MEDIA_URL = '/media/' #url
MEDIA_ROOT = BASE_DIR / 'media' # for production

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'imakemyownluck619@gmail.com'
EMAIL_HOST_PASSWORD = 'miiu rgag ukri trjw'
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# LOGGING = {
#     "version": 1,
#     "disable_existing_loggers": False,
#     "handlers": {
#         "console": {
#             "class": "logging.StreamHandler",
#         },
#         'file' : {
#             'level': 'DEBUG',
#             'class': 'logging.FileHandler',
#             'filename': os.path.join(BASE_DIR, 'info.log'),
#         },
#     },
#     "root": {
#         "handlers": ["console", 'file'],
#         "level": "DEBUG",
#     },
# }


# LOGGING = {
#     "version": 1,
#     "disable_existing_loggers": False,
#     "formatters": {
#         "verbose": {
#             "format": "{levelname} {asctime} {module} {message}",
#             "style": "{",
#         },
#         "simple": {
#             "format": "{levelname} {message}",
#             "style": "{",
#         },
#     },
#     "handlers": {
#         "console": {
#             "class": "logging.StreamHandler",
#             "formatter": "simple",
#         },
#         "info_file": {
#             "level": "INFO",
#             "class": "logging.FileHandler",
#             "filename": os.path.join(BASE_DIR, "info.log"),
#         },
#         "error_file": {
#             "level": "ERROR",
#             "class": "logging.FileHandler",
#             "filename": os.path.join(BASE_DIR, "error.log"),
#         },
#         "debug_file": {
#             "level": "DEBUG",
#             "class": "logging.FileHandler",
#             "filename": os.path.join(BASE_DIR, "debug.log"),
#         },
#     },
#     "loggers": {
#         "django": {
#             "handlers": ["info_file"],
#             "level": "INFO",
#             "propagate": True,
#         },
#         "error_logger": {
#             "handlers": ["error_file"],
#             "level": "ERROR",
#             "propagate": False,
#         },
#         "debug_logger": {
#             "handlers": ["debug_file"],
#             "level": "DEBUG",
#             "propagate": False,
#         },
#     },
#     "root": {
#         "handlers": ["console"],
#         "level": "WARNING",
#     },
# }
